{"ast":null,"code":"\"use client\";import{useEffect,useRef,useState}from\"react\";export function useIntersectionObserver(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{threshold=0.1,rootMargin=\"0px\",triggerOnce=true}=options;const[isIntersecting,setIsIntersecting]=useState(false);const[hasIntersected,setHasIntersected]=useState(false);const targetRef=useRef(null);useEffect(()=>{const target=targetRef.current;if(!target)return;const observer=new IntersectionObserver(_ref=>{let[entry]=_ref;const isElementIntersecting=entry.isIntersecting;setIsIntersecting(isElementIntersecting);if(isElementIntersecting&&!hasIntersected){setHasIntersected(true);if(triggerOnce){observer.unobserve(target);}}},{threshold,rootMargin});observer.observe(target);return()=>{observer.disconnect();};},[threshold,rootMargin,triggerOnce,hasIntersected]);return{targetRef,isIntersecting,hasIntersected};}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}