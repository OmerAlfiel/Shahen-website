{"ast":null,"code":"\"use client\";\n\nvar _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nexport function useIntersectionObserver(options = {}) {\n  _s();\n  const {\n    threshold = 0.1,\n    rootMargin = \"0px\",\n    triggerOnce = true\n  } = options;\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const [hasIntersected, setHasIntersected] = useState(false);\n  const targetRef = useRef(null);\n  useEffect(() => {\n    const target = targetRef.current;\n    if (!target) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      const isElementIntersecting = entry.isIntersecting;\n      setIsIntersecting(isElementIntersecting);\n      if (isElementIntersecting && !hasIntersected) {\n        setHasIntersected(true);\n        if (triggerOnce) {\n          observer.unobserve(target);\n        }\n      }\n    }, {\n      threshold,\n      rootMargin\n    });\n    observer.observe(target);\n    return () => {\n      observer.disconnect();\n    };\n  }, [threshold, rootMargin, triggerOnce, hasIntersected]);\n  return {\n    targetRef,\n    isIntersecting,\n    hasIntersected\n  };\n}\n_s(useIntersectionObserver, \"uq7qpokkcd0ooHLU95ZbL0mf5Wo=\");","map":{"version":3,"names":["_s","$RefreshSig$","useEffect","useRef","useState","useIntersectionObserver","options","threshold","rootMargin","triggerOnce","isIntersecting","setIsIntersecting","hasIntersected","setHasIntersected","targetRef","target","current","observer","IntersectionObserver","entry","isElementIntersecting","unobserve","observe","disconnect"],"sources":["C:/Users/Mega Store/Downloads/Shahen-website-main/front-end/src/hooks/use-intersection-observer.ts"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\n\ninterface UseIntersectionObserverOptions {\n  threshold?: number\n  rootMargin?: string\n  triggerOnce?: boolean\n}\n\nexport function useIntersectionObserver(options: UseIntersectionObserverOptions = {}) {\n  const { threshold = 0.1, rootMargin = \"0px\", triggerOnce = true } = options\n  const [isIntersecting, setIsIntersecting] = useState(false)\n  const [hasIntersected, setHasIntersected] = useState(false)\n  const targetRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const target = targetRef.current\n    if (!target) return\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        const isElementIntersecting = entry.isIntersecting\n        setIsIntersecting(isElementIntersecting)\n\n        if (isElementIntersecting && !hasIntersected) {\n          setHasIntersected(true)\n          if (triggerOnce) {\n            observer.unobserve(target)\n          }\n        }\n      },\n      { threshold, rootMargin },\n    )\n\n    observer.observe(target)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [threshold, rootMargin, triggerOnce, hasIntersected])\n\n  return { targetRef, isIntersecting, hasIntersected }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,EAAA,GAAAC,YAAA;AAEZ,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAQnD,OAAO,SAASC,uBAAuBA,CAACC,OAAuC,GAAG,CAAC,CAAC,EAAE;EAAAN,EAAA;EACpF,MAAM;IAAEO,SAAS,GAAG,GAAG;IAAEC,UAAU,GAAG,KAAK;IAAEC,WAAW,GAAG;EAAK,CAAC,GAAGH,OAAO;EAC3E,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMU,SAAS,GAAGX,MAAM,CAAiB,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,MAAMC,qBAAqB,GAAGD,KAAK,CAACT,cAAc;MAClDC,iBAAiB,CAACS,qBAAqB,CAAC;MAExC,IAAIA,qBAAqB,IAAI,CAACR,cAAc,EAAE;QAC5CC,iBAAiB,CAAC,IAAI,CAAC;QACvB,IAAIJ,WAAW,EAAE;UACfQ,QAAQ,CAACI,SAAS,CAACN,MAAM,CAAC;QAC5B;MACF;IACF,CAAC,EACD;MAAER,SAAS;MAAEC;IAAW,CAC1B,CAAC;IAEDS,QAAQ,CAACK,OAAO,CAACP,MAAM,CAAC;IAExB,OAAO,MAAM;MACXE,QAAQ,CAACM,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,EAAEC,UAAU,EAAEC,WAAW,EAAEG,cAAc,CAAC,CAAC;EAExD,OAAO;IAAEE,SAAS;IAAEJ,cAAc;IAAEE;EAAe,CAAC;AACtD;AAACZ,EAAA,CAjCeK,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}